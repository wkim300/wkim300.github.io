# Project template
- layout: top-middle
  name: Training Lunar Lander with Deep Reinforcement Learning
  link: https://github.com/wkim300/dqn_lunarlander
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  # quote: >
  #   Short overview of the project (optional)
  description: | # this will include new lines to allow paragraphs
    This work (see write-up [here](https://github.com/wkim300/dqn_lunarlander/blob/master/report/drl_lunarlander_wk.pdf)) presents a **Deep Q-network (DQN)** to solve Open AI Gym’s Lunar Lander environment.
    The trained DQN successfully controls the space fleet in a continuous state-space, enabling safe landings.
    The DQN utilizes three fully connected layers with rectifier nonlinearities to approximate the optimal action-value function.
    Experience replay and bootstrapping method through network duplication were utilized to improve the network’s performance.
    Extensive grid search was performed to fine-tune the network’s hyperparameters and study their effects on the agent’s performance

# Project template
- layout: top-middle
  name: Analysis of Adult Income & Wine Quality Dataset through Machine Learning Methods
  link: https://github.com/wkim300/ml_analysis_wine-adult
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  # quote: >
  #   Short overview of the project (optional)
  description: | # this will include new lines to allow paragraphs
    This work (see write-up [here](https://github.com/wkim300/ml_analysis_wine-adult/blob/master/report/adult-wine_report.pdf)) explores data-driven machine learning techniques;
    five **classification algorithms**—decision tree, neural networks, AdaBoosted decision trees, support vector machines, k-nearest neighbors—were implemented on two different datasets: 
    **[adult income dataset](https://www.kaggle.com/wenruliu/adult-income-dataset)** and
    **[wine quality dataset](https://www.kaggle.com/uciml/red-wine-quality-cortez-et-al-2009)**.
    After some data preprocessing, the algorithms were trained on both datasets through k-fold (k=10) cross-validation method.
    During the training, learning curves and complexity curves were plotted. Then the trained models were tested on the unseen,
    held-out testing sets (20% of the entire datasets), and the resulting performances were analyzed utilizing various metrics, such as precision, recall and f1-score.

- layout: top-middle
  name: Yuikhan Air-purifying Robot
  link: https://yuikhan.life
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  # quote: >
  #   Short overview of the project (optional)
  description: | # this will include new lines to allow paragraphs
    I have teamed up with my former classmates at UIUC to design and prototype an **air-purifying robot, Yuikhan** (유익한 로봇).
    Yuikhan is a smarter version of robotic vacuum-for air quality control.
    It autonomously creates map of the living space using **LiDAR** and **SLAM** technology.
    **After recogizing your space, it then purifies the space based on indoor air quality map that it has generated**.
    We have built the robot from scratch using a 3D-printer and off-the-shelf components.
    We then integrated the hardware to and the cleaning algorithm through **Robotic Operating System (ROS)**.
    We have a working protype of the device which syncs with a mobile application for direct control.
    See our [landing page](https://yuikhan.life) for more information.
